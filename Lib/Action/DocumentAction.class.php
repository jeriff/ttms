<?php    /*     * 	文档管理     *  author:jason.guo	      * 	updata:2012-08-30     */require_once './Common/enumeration.class.php';header("Content-type: text/html; charset=utf-8");import("@.ORG.User");class DocumentAction extends Action {     /*     * 	文档列表     *  author:jason.guo	      * 	updata:2012-08-30     */    public function index()	{		if($_GET['project_name']){			$map['project_name'] = array('like','%'.$_GET['project_name'].'%');			$this->assign('project_name', $_GET['project_name']);		}		if($_GET['document_file']){			$map['document_file'] = array('like','%'.$_GET['document_file'].'%');			$this->assign('document_file', $_GET['document_file']);		}		$user = $_COOKIE[C('COOKIE_PREFIX') . 'username'];		$this->assign('user', $user);		$list = D("Document")->getDocument($map);		$this->assign('list', $list['list']);		$this->assign('page', $list['show']);		$this->assign('menu_name','icon_10');		$this->display();	}     /*     * 	文档添加	 *	权限管理文档	 *	如果是新的就添加	 *	如果是更新，就添加一条新的文档记录，再把关于此id的文档记录的父级字段更新为新记录的id     *  author:jason.guo	      * 	updata:2012-08-30     */	public function add(){		$act = $_GET['act'];		$this->assign("act",$_GET['act']);		if($act == 'edit'){			SysUser::check_privilege('document_edit');		}else if($act == 'add'){			SysUser::check_privilege('document_add');		}				$document = D("document");		if($_GET['id']){			$old_data = $document->where("id=".$_GET['id'])->select();			$old_data_list = $document->where("document_id=".$_GET['id'])->select();			$this->assign("old_data_list",$old_data_list);			$this->assign("old_data",$old_data[0]);		}		if($_POST){			$array = $_POST;			$array['document_status'] = 1;			$date = date("Y-m-d H:i:s");			$array['created'] = $date;			$array['created_by'] = $_COOKIE[C('COOKIE_PREFIX') . 'username'];			if($array['id']){				$old_id = $array['id'];				unset($array['id']);				$where['id']  = $old_id;				$where['document_id']  = $old_id;				$where['_logic'] = 'or';				$sum = $document->where($where)->count("id");				$array['document_version'] = ($sum+1);//版本计算				//添加一条新的文档记录				$id = $document->add($array);				$data['document_id'] = $id;				$data['document_status'] = 0;				$data['modified'] = $date;				$data['modified_by'] = $_COOKIE[C('COOKIE_PREFIX') . 'username'];				//更新之前此文档的记录，父级为新记录的id				$document->where($where)->save($data);			}else{				$array['document_version'] = 1;				$id = $document->add($array);			}			die("<script>alert('文档添加成功');window.location='?m=document&a=index';</script>");		}		$enum = new Enumeration(); //生成下拉菜单类		/*		*得到所有的项目		*/		$project_array = M('project')->field('project_id,project_name')->findAll();		foreach($project_array as $key=>$value){			$project_arr[$value['project_name']] = $value['project_name'];		}		$project_name = $enum->get_radio($project_arr, 'project_name', 'project_name', $old_data[0]['project_name'], $size = 7, '',$class = '', $ext = '', $gettype = 2);		$this->assign('project_name', $project_name);		//是否开放，不开放只有管理员和创建人可以看到和操作		$array = array('Y'=>'是','N'=>'否');		$document_open = $enum->get_radio($array, 'document_open', 'document_open', $old_data[0]['document_open'], $size = 7, '',$class = '', $ext = '', $gettype = 2);		$this->assign('document_open', $document_open);		$document_arr = C('document');		$this->assign('document_arr', $document_arr);		//文档类型 开发、需求、升级、测试、操作手册        $document_type = $enum->get_select($document_arr['document_type'], 'document_type', 'document_type', $old_data[0]['document_type'], $size = 1, $class = '', $ext = '', $gettype = 2);		$this->assign('document_type', $document_type);		//机密等级        $document_secret = $enum->get_select($document_arr['document_secret'], 'document_secret', 'document_secret', $old_data[0]['document_secret'], $size = 1, $class = '', $ext = '', $gettype = 2);		$this->assign('document_secret', $document_secret);		//完整性等级        $document_whole = $enum->get_select($document_arr['document_whole'], 'document_whole', 'document_whole', $old_data[0]['document_whole'], $size = 1, $class = '', $ext = '', $gettype = 2);		$this->assign('document_whole', $document_whole);		//可用性等级        $document_use = $enum->get_select($document_arr['document_use'], 'document_use', 'document_use', $old_data[0]['document_use'], $size = 1, $class = '', $ext = '', $gettype = 2);		$this->assign('document_use', $document_use);		$this->assign('menu_name','icon_10');		$this->display();	}     /*     * 	文档删除	 *	权限管理删除文档     *  author:jason.guo	      * 	updata:2012-08-30     */	public function delete(){        $username=$_COOKIE[C('COOKIE_PREFIX') . 'username'];		$id = $_GET['id'];		//如果是system则直接删除		//不是system则查看是否有权限        if($username!='system'){            $map['username'] = $username;            $privileges = D('user')->field('privileges')->where($map)->limit(1)->select();            $privileges_arr = explode(",", $privileges[0][privileges]);            if (in_array('document_delete', $privileges_arr)) {				$return_id = D("document")->where("id=".$id)->delete();				$this->ajaxReturn($return_id,'删除成功！~',1);            }else{				$this->ajaxReturn($username,'无权操作!~',0);            }        }else{			$return_id = D("document")->where("id=".$id)->delete();			$this->ajaxReturn($return_id,'删除成功！~',1);		}	}	}?>